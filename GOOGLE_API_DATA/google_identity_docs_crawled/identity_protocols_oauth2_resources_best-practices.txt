[2025-08-31] Source URL: https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
Switch to English
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Identity [https://developers.google.com/identity?hl=ko]
승인 [https://developers.google.com/identity/protocols/oauth2?hl=ko]
Authorization Resources [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko]
의견 보내기
권장사항
bookmark_border
이 페이지의 내용
클라이언트 사용자 인증 정보를 안전하게 처리 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#handle-client-credentials-securely]
사용자 토큰을 안전하게 처리 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#handle-user-tokens-securely]
갱신 토큰 취소 및 만료 처리 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#handle-refresh-token-revocation]
점진적 승인 사용 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#use-incremental-authorization]
여러 범위에 대한 동의 처리 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#multiple-scopes]
이 페이지에서는 OAuth 2.0과 통합하기 위한 몇 가지 일반적인 권장사항을 다룹니다. 애플리케이션 유형 및 개발 플랫폼에 관한 특정 안내 외에도 다음 권장사항을 고려하세요. 프로덕션용 앱 준비에 관한 조언 [https://developers.google.com/identity/protocols/oauth2/production-readiness/policy-compliance?hl=ko] 및 Google의 OAuth 2.0 정책 [https://developers.google.com/identity/protocols/oauth2/policies?hl=ko]도 참고하세요.
클라이언트 사용자 인증 정보를 안전하게 처리
OAuth 클라이언트 사용자 인증 정보는 앱의 ID를 식별하며 신중하게 처리해야 합니다. 이러한 사용자 인증 정보는 Google Cloud Secret Manager [https://cloud.google.com/secret-manager/docs/overview?hl=ko]와 같은 보안 비밀 관리자를 사용하여 보안 스토리지에만 저장하세요. 사용자 인증 정보를 하드 코딩하거나 코드 저장소에 커밋하거나 공개적으로 게시하지 마세요.
사용자 토큰을 안전하게 처리
사용자 토큰에는 애플리케이션에서 사용하는 갱신 토큰과 액세스 토큰이 모두 포함됩니다. 토큰을 유휴 상태 [https://wikipedia.org/wiki/Data_at_rest]로 안전하게 저장하고 일반 텍스트로 전송하지 마세요. Android의 Keystore [https://developer.android.com/training/articles/keystore?hl=ko], iOS 및 macOS의 키체인 서비스, Windows의 사용자 인증 정보 보관함과 같이 플랫폼에 적합한 보안 저장소 시스템을 사용하세요.
더 이상 필요하지 않은 토큰은 즉시 취소 [https://developers.google.com/identity/protocols/oauth2/web-server?hl=ko#tokenrevoke]하고 시스템에서 영구적으로 삭제합니다.
또한 플랫폼에 관한 다음 권장사항도 고려하세요.
여러 사용자의 토큰을 저장하는 서버 측 [https://developers.google.com/identity/protocols/oauth2/web-server?hl=ko] 애플리케이션의 경우 미사용 상태로 암호화하고 데이터 스토어가 인터넷에서 공개적으로 액세스할 수 없도록 합니다.
네이티브 데스크톱 앱의 경우 PKCE (Proof Key for Code Exchange) 프로토콜 [https://developers.google.com/identity/protocols/oauth2/native-app?hl=ko#obtainingaccesstokens]을 사용하여 액세스 토큰으로 교환할 수 있는 승인 코드를 획득하는 것이 좋습니다.
갱신 토큰 취소 및 만료 처리
앱이 오프라인 액세스를 위한 갱신 토큰 [https://developers.google.com/identity/protocols/oauth2/web-server?hl=ko#offline]을 요청한 경우 무효화 또는 만료도 처리해야 합니다. 토큰은 만료되었거나 사용자 또는 자동 프로세스에 의해 앱의 액세스가 취소되는 등 다양한 이유로 무효화 [https://developers.google.com/identity/protocols/oauth2?hl=ko#expiration]될 수 있습니다. 이 경우 다음 로그인 시 사용자에게 메시지를 표시하거나 데이터를 정리하는 등 애플리케이션이 어떻게 응답해야 하는지 신중하게 고려하세요. 토큰 폐기에 관한 알림을 받으려면 계정 간 보안 [https://developers.google.com/identity/protocols/risc?hl=ko] 서비스와 통합하세요.
점진적 승인 사용
점진적 승인 [https://developers.google.com/identity/protocols/oauth2/web-server?hl=ko#incrementalAuth]을 사용하여 애플리케이션에 기능이 필요할 때 적절한 OAuth 범위를 요청합니다.
앱의 핵심 기능에 필수적이지 않은 경우 사용자가 처음 인증할 때 데이터 액세스를 요청해서는 안 됩니다. 대신 가능한 가장 작고 제한된 범위를 선택 [https://developers.google.com/identity/protocols/oauth2/production-readiness/policy-compliance?hl=ko#only-request-needed-scopes]한다는 원칙에 따라 작업에 필요한 특정 범위만 요청하세요.
사용자가 앱에서 액세스를 요청하는 이유와 데이터가 사용되는 방식을 이해할 수 있도록 항상 관련 맥락 안에서 범위를 요청하세요.
예를 들어 애플리케이션이 다음 모델을 따를 수 있습니다.
사용자가 앱으로 인증합니다.
추가 범위가 요청되지 않습니다. 앱은 사용자가 추가 데이터나 액세스가 필요하지 않은 기능을 탐색하고 사용할 수 있는 기본 기능을 제공합니다.
사용자가 추가 데이터에 대한 액세스가 필요한 기능을 선택합니다.
애플리케이션이 이 기능에 필요한 특정 OAuth 범위에 대한 승인 요청을 합니다. 이 기능에 여러 범위가 필요한 경우 아래 권장사항 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#multiple-scopes]을 따르세요.
사용자가 요청을 거부하면 앱은 기능을 사용 중지하고 사용자에게 액세스를 다시 요청할 수 있는 추가 컨텍스트를 제공합니다.
여러 범위에 대한 동의 처리
한 번에 여러 범위를 요청하는 경우 사용자가 요청한 모든 OAuth 범위를 부여하지 않을 수 있습니다. 앱은 관련 기능을 사용 중지하여 범위 거부를 처리해야 합니다.
앱의 기본 기능에 여러 범위가 필요한 경우 동의를 요청하기 전에 사용자에게 이를 설명하세요.
범위가 필요한 특정 기능을 사용하겠다는 의사를 명확하게 표시한 후에만 사용자에게 다시 메시지를 표시할 수 있습니다. 앱은 OAuth 범위를 요청하기 전에 사용자에게 관련 컨텍스트와 근거를 제공해야 합니다.
앱이 한 번에 요청하는 범위의 수를 최소화해야 합니다. 대신 증분 승인 [https://developers.google.com/identity/protocols/oauth2/resources/best-practices?hl=ko#use-incremental-authorization]을 활용하여 기능 및 기능의 컨텍스트에서 범위를 요청하세요.
보안 브라우저 사용
웹에서 OAuth 2.0 승인 요청은 모든 기능을 갖춘 웹브라우저에서만 이루어져야 합니다. 다른 플랫폼에서는 올바른 OAuth 클라이언트 유형 [https://developers.google.com/identity/protocols/oauth2?hl=ko#basicsteps]을 선택하고 플랫폼에 적합한 방식으로 OAuth를 통합해야 합니다. Android의 WebView 또는 iOS의 WKWebView와 같은 모바일 플랫폼의 WebView를 비롯한 삽입된 탐색 환경을 통해 요청을 리디렉션하지 마세요. 대신 플랫폼에 네이티브 OAuth 라이브러리 [https://developers.google.com/identity/protocols/oauth2/native-app?hl=ko] 또는 Google 로그인 [https://developers.google.com/identity/authorization?hl=ko]을 사용하세요.
OAuth 클라이언트의 수동 생성 및 구성
악용을 방지하기 위해 OAuth 클라이언트는 프로그래매틱 방식으로 만들거나 수정할 수 없습니다. Google 개발자 콘솔을 사용하여 서비스 약관을 명시적으로 확인하고 OAuth 클라이언트를 구성하고 OAuth 인증을 준비해야 합니다.
자동화된 워크플로의 경우 서비스 계정 [https://developers.google.com/identity/protocols/oauth2/service-account?hl=ko]을 대신 사용하는 것이 좋습니다.
사용하지 않는 OAuth 클라이언트 삭제
OAuth 2.0 클라이언트를 정기적으로 감사하고 애플리케이션에 더 이상 필요하지 않거나 오래된 클라이언트를 선제적으로 삭제하세요. 사용하지 않는 클라이언트를 구성된 상태로 두면 클라이언트 사용자 인증 정보가 유출될 경우 클라이언트가 오용될 수 있으므로 잠재적인 보안 위험이 발생합니다.
사용하지 않는 클라이언트의 위험을 더욱 완화하기 위해 6개월 동안 비활성 상태였던 OAuth 2.0 클라이언트는 자동으로 삭제 [https://support.google.com/cloud/answer/15549257?hl=ko#unused-client-deletion]됩니다.
자동 삭제를 기다리지 말고 사용하지 않는 클라이언트를 선제적으로 삭제하는 것이 좋습니다. 이 방법을 사용하면 애플리케이션의 공격 표면이 최소화되고 보안 관리가 효과적으로 이루어집니다.
의견 보내기